generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String        @id @default(cuid())
  email                String?       @unique
  name                 String?
  role                 Role?
  googleId             String?       @unique
  refreshToken         String?
  emailVerified        DateTime?
  image                String?
  accounts             Account[]
  appointmentsAsBuyer  Appointment[] @relation("BuyerAppointments")
  appointmentsAsSeller Appointment[] @relation("SellerAppointments")
  seller               Seller?
  sessions             Session[]
}

model Appointment {
  id            String   @id @default(cuid())
  start         DateTime
  end           DateTime
  buyerId       String
  sellerId      String
  createdAt     DateTime @default(now())
  eventIdBuyer  String?
  eventIdSeller String?
  hangoutLink   String?
  summary       String?
  buyer         User     @relation("BuyerAppointments", fields: [buyerId], references: [id])
  seller        User     @relation("SellerAppointments", fields: [sellerId], references: [id])
}

model Seller {
  id               String   @id @default(cuid())
  userId           String   @unique
  encryptedRefresh String
  tokenMeta        Json?
  createdAt        DateTime @default(now())
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  refresh_token_expires_in Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  BUYER
  SELLER
}
